pipeline {
    agent any
       environment {
           DOCKERHUB_CREDENTIALS = credentials('docker-hub-credentials')
           IMAGE_TAG = "dafik15/aws-inventory-project-app-14-aug:${BUILD_NUMBER}"
           GIT_REPO_NAME = "aws-inventory-k8s"
           GIT_USER_NAME = "Dafik-G-2"
           // DOCKER_HUB_USERNAME = 'dafik15' 
           // SONAR_URL = "http://65.2.71.169:9000/"
       }
    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: 'main', url: 'https://github.com/Dafik-G-2/aws-inventory-project.git'
                }
            }
        }
        stage('Build and Test') {
            steps {
                sh 'mvn package'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker ps -a"
                    sh "docker build -t ${IMAGE_TAG} ."
                }
            }
        }
        //stage('Trivy Scan') {
           // steps {
            //     script {
            //         // Assuming Trivy CLI is installed on Jenkins agent
           //          sh "trivy image --format json --output trivy-report.json ${IMAGE_TAG}"
                    
           //          // Optionally, you can parse the JSON report and fail the build on high-severity vulnerabilities
           //          sh """
            //         if grep -q '"Severity": "HIGH"' trivy-report.json; then
            //             echo "High severity vulnerabilities found!"
             //            exit 1
            //         fi
             //        """
            //     }
            // }
         // }
        
       // stage('Docker Login') {
         //   steps {
           //     script {
             //       bat """
               //     echo %DOCKER_CREDENTIALS_USR%
                 //   echo %DOCKER_CREDENTIALS_PSW%
                   // docker login -u %DOCKER_CREDENTIALS_USR% -p %DOCKER_CREDENTIALS_PSW% https://index.docker.io/v1/
                    //"""
             //   }
           // }
       // }
         stage('Push to Docker Hub') {
            steps {
                script {
                    sh "echo ${DOCKERHUB_CREDENTIALS_PSW} | docker login --username ${DOCKERHUB_CREDENTIALS_USR} --password-stdin"
                    sh "docker push ${IMAGE_TAG}"
                    sh "docker rmi ${IMAGE_TAG}"
                }
            }
        }
stage('Update Deployment File') {
    steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
            script {
                try {
                    sh '''
                        set -e
                        cd ~
                        pwd
                        rm -rf ${GIT_REPO_NAME}
                        git clone https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git
                        cd ${GIT_REPO_NAME}
                        # Update the deployment file
                        sed -i 's|image: dafik15/aws-inventory-project-app-14-aug:.*|image: dafik15/aws-inventory-project-app-14-aug:${BUILD_NUMBER}|g' K8S/deployment.yml
                        git config user.email "g.dafik15@gmail.com"
                        git config user.name "Dafik-G-2"
                        git add K8S/deployment.yml
                        git commit -m "Update deployment file with image version ${BUILD_NUMBER}"
                        # Ensure the remote name and branch are correct
                        # git push origin main
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                    '''
                } catch (Exception e) {
                    echo "Error occurred during deployment file update: ${e.getMessage()}"
                    throw e
                }
            }
        }
    }
}

    }
}
